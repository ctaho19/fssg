-- Combined Query for Tier 0, Tier 1, and Tier 2 Metrics

-- Tier 0 (Heartbeat) Metric
WITH LATEST_SCAN_INFO_T0 AS (
    SELECT 
        METRIC_DATE,
        SF_LOAD_TIMESTAMP,
        CASE 
            WHEN DATE(SF_LOAD_TIMESTAMP) >= DATEADD(DAY, -1, CURRENT_DATE()) THEN TRUE 
            ELSE FALSE 
        END AS IS_CURRENT,
        TOTAL_BUCKETS_SCANNED_BY_MACIE AS BUCKETS_SCANNED
    FROM CYBR_DB.PHDP_CYBR.MACIE_METRICS_V3
    WHERE SF_LOAD_TIMESTAMP = (
        SELECT MAX(SF_LOAD_TIMESTAMP) 
        FROM CYBR_DB.PHDP_CYBR.MACIE_METRICS_V3
    )
),
TIER_0 AS (
    SELECT 
        CURRENT_TIMESTAMP() AS DATE,
        'CTRL-1079134' AS CTRL_ID,
        'MNTR-1079134-T0' AS MONITORING_METRIC_NUMBER,
        CASE 
            WHEN IS_CURRENT = TRUE AND BUCKETS_SCANNED > 0 THEN 100
            ELSE 0
        END AS MONITORING_METRIC,
        CASE 
            WHEN IS_CURRENT = TRUE AND BUCKETS_SCANNED > 0 THEN 'GREEN'
            ELSE 'RED'
        END AS COMPLIANCE_STATUS,
        BUCKETS_SCANNED AS NUMERATOR,
        1 AS DENOMINATOR
    FROM LATEST_SCAN_INFO_T0
),

-- Tier 1 (Completeness) Metric
LATEST_SCAN_INFO_T1 AS (
    -- Get the most recent scan metrics
    SELECT 
        METRIC_DATE,
        SF_LOAD_TIMESTAMP,
        TOTAL_BUCKETS_SCANNED_BY_MACIE,
        TOTAL_CLOUDFRONTED_BUCKETS,
        -- Determine if scan data is current
        CASE 
            WHEN DATE(SF_LOAD_TIMESTAMP) >= DATEADD(DAY, -1, CURRENT_DATE()) THEN TRUE 
            ELSE FALSE 
        END AS IS_CURRENT
    FROM CYBR_DB.PHDP_CYBR.MACIE_METRICS_V3
    WHERE SF_LOAD_TIMESTAMP = (
        -- Get the most recent load timestamp
        SELECT MAX(SF_LOAD_TIMESTAMP) 
        FROM CYBR_DB.PHDP_CYBR.MACIE_METRICS_V3
    )
),
TIER_1 AS (
    -- Calculate completeness metrics and determine compliance status
    SELECT
        CURRENT_TIMESTAMP() AS DATE,
        'CTRL-1079134' AS CTRL_ID,
        'MNTR-1079134-T1' AS MONITORING_METRIC_NUMBER,
        -- Calculate percentage of buckets scanned if data is current, otherwise 0
        CASE 
            WHEN IS_CURRENT THEN 
                ROUND(100.0 * TOTAL_BUCKETS_SCANNED_BY_MACIE / NULLIF(TOTAL_CLOUDFRONTED_BUCKETS, 0), 2)
            ELSE 0
        END AS MONITORING_METRIC,
        -- Determine compliance status based on scan coverage
        CASE 
            WHEN NOT IS_CURRENT OR MONITORING_METRIC<=(SELECT ALERT_THRESHOLD FROM "CYBR_DB_COLLAB"."LAB_ESRA_TCRD"."CYBER_CONTROLS_MONITORING_THRESHOLD" WHERE MONITORING_METRIC_ID='MNTR-1079134-T1') THEN 'RED'                                                          -- Not current = RED
            WHEN MONITORING_METRIC <= (SELECT WARNING_THRESHOLD FROM "CYBR_DB_COLLAB"."LAB_ESRA_TCRD"."CYBER_CONTROLS_MONITORING_THRESHOLD" WHERE MONITORING_METRIC_ID='MNTR-1079134-T1') THEN 'YELLOW' -- >=80% = YELLOW
            ELSE 'GREEN'                                                                                -- <80% = RED
        END AS COMPLIANCE_STATUS,
        TOTAL_BUCKETS_SCANNED_BY_MACIE AS NUMERATOR,
        TOTAL_CLOUDFRONTED_BUCKETS AS DENOMINATOR
    FROM LATEST_SCAN_INFO_T1
),

-- Tier 2 (Accuracy) Metric
LAST_SCAN_DATE AS (
    -- Get the most recent scan date within the last 3 days
    SELECT MAX(REPORTDATE) AS RECENT_DATE
    FROM CYBR_DB.PHDP_CYBR.MACIE_CONTROLS_TESTING
    WHERE REPORTDATE BETWEEN DATEADD(DAY, -3, CURRENT_DATE()) AND CURRENT_DATE()
),
SUMMARY AS (
    -- Calculate total tests and successful tests for most recent scan
    SELECT
        COUNT(*) AS TOTAL_TESTS,
        SUM(CASE WHEN TESTISSUCCESSFUL = TRUE THEN 1 ELSE 0 END) AS TOTAL_SUCCESSFUL_TESTS
    FROM CYBR_DB.PHDP_CYBR.MACIE_CONTROLS_TESTING
    JOIN LAST_SCAN_DATE LSD ON REPORTDATE = LSD.RECENT_DATE
),
HISTORICAL_DATA AS (
    -- Get historical test statistics over past 90 days for anomaly detection
    SELECT
        AVG(TOTAL_TESTS) AS AVG_HISTORICAL_TESTS,
        MIN(TOTAL_TESTS) AS MIN_HISTORICAL_TESTS,
        MAX(TOTAL_TESTS) AS MAX_HISTORICAL_TESTS
    FROM (
        SELECT REPORTDATE, COUNT(*) AS TOTAL_TESTS
        FROM CYBR_DB.PHDP_CYBR.MACIE_CONTROLS_TESTING
        WHERE REPORTDATE BETWEEN DATEADD(DAY, -90, CURRENT_DATE()) AND DATEADD(DAY, -1, CURRENT_DATE())
        GROUP BY REPORTDATE
    ) DAILY_TESTS
),
TIER_2  AS (
    SELECT
    CURRENT_TIMESTAMP AS DATE,
    'CTRL-1079134' AS CTRL_ID,
    'MNTR-1079134-T2' AS MONITORING_METRIC_NUMBER,
    -- Calculate percentage of successful tests
    CASE 
        WHEN TOTAL_TESTS = 0 THEN 0
        ELSE ROUND(100.00 * TOTAL_SUCCESSFUL_TESTS / TOTAL_TESTS, 2)
    END AS MONITORING_METRIC,
    -- Determine compliance status based on test results and historical patterns
    CASE 
        WHEN TOTAL_TESTS = 0 OR MONITORING_METRIC<=(SELECT ALERT_THRESHOLD FROM "CYBR_DB_COLLAB"."LAB_ESRA_TCRD"."CYBER_CONTROLS_MONITORING_THRESHOLD" WHERE MONITORING_METRIC_ID='MNTR-1079134-T2') THEN 'RED'                                            -- No tests run OR LESS THAN 80%                               
        WHEN TOTAL_TESTS < (SELECT MIN_HISTORICAL_TESTS FROM HISTORICAL_DATA)     -- Anomaly detection:
          OR TOTAL_TESTS > (SELECT MAX_HISTORICAL_TESTS FROM HISTORICAL_DATA)     -- Test count outside historical range
          OR ABS(TOTAL_TESTS - (SELECT AVG_HISTORICAL_TESTS FROM HISTORICAL_DATA)) 
             > (SELECT AVG_HISTORICAL_TESTS FROM HISTORICAL_DATA) * 0.2           -- Test count deviates >20% from average
          OR MONITORING_METRIC<=(SELECT WARNING_THRESHOLD FROM "CYBR_DB_COLLAB"."LAB_ESRA_TCRD"."CYBER_CONTROLS_MONITORING_THRESHOLD" WHERE MONITORING_METRIC_ID='MNTR-1079134-T2')
        THEN 'YELLOW'
        ELSE 'GREEN'
    END AS COMPLIANCE_STATUS,
    COALESCE(TOTAL_SUCCESSFUL_TESTS, 0) AS NUMERATOR,
    TOTAL_TESTS AS DENOMINATOR
FROM SUMMARY, LAST_SCAN_DATE LSD
)

-- Combine the results of Tier 0, Tier 1, and Tier 2
SELECT * FROM TIER_0
UNION ALL
SELECT * FROM TIER_1
UNION ALL
SELECT * FROM TIER_2;