pipeline:
  name: pl_automated_monitoring_CTRL_1077188
  use_test_data_on_nonprod: false
  dq_strict_mode: false

stages:
  extract:
    thresholds_raw:
      connector: snowflake
      options:
        sql: "@text:sql/monitoring_thresholds.sql"
    dataset_certificates:
      connector: snowflake
      options:
        sql: |
          SELECT DISTINCT
              certificate_arn,
              certificate_id,
              nominal_issuer,
              not_valid_before_utc_timestamp,
              not_valid_after_utc_timestamp,
              last_usage_observation_utc_timestamp
          FROM CYBR_DB.PHDP_CYBR.CERTIFICATE_CATALOG_CERTIFICATE_USAGE 
          WHERE certificate_arn LIKE '%arn:aws:acm%' 
            AND nominal_issuer = 'Amazon' 
            AND not_valid_after_utc_timestamp >= DATEADD('DAY', -365, CURRENT_TIMESTAMP)

  ingress_validation:
    thresholds_raw:
      - type: count_check
        fatal: true
        envs:
          - qa
          - prod
        options:
          data_location: Snowflake
          threshold: 1
          table_name: ETIP_DB.PHDP_ETIP_CONTROLS_MONITORING.ETIP_CONTROLS_MONITORING_METRICS_DETAILS
    dataset_certificates:
      - type: count_check
        fatal: true
        envs:
          - qa
          - prod
        options:
          data_location: Snowflake
          threshold: 1
          table_name: CYBR_DB.PHDP_CYBR.CERTIFICATE_CATALOG_CERTIFICATE_USAGE

  transform:
    tier0_metrics:
      - function: custom/calculate_tier0_metrics
        options:
          thresholds_raw: $thresholds_raw
    
    tier1_metrics:
      - function: custom/calculate_tier1_metrics
        options:
          thresholds_raw: $thresholds_raw
          dataset_certificates: $dataset_certificates
    
    tier2_metrics:
      - function: custom/calculate_tier2_metrics
        options:
          thresholds_raw: $thresholds_raw
          dataset_certificates: $dataset_certificates
    
    monitoring_metrics:
      - function: custom/combine_metrics
        options:
          tier0_metrics: $tier0_metrics
          tier1_metrics: $tier1_metrics
          tier2_metrics: $tier2_metrics

  load:
    monitoring_metrics:
      - connector: onestream
        options:
          table_name: etip_controls_monitoring_metrics
          file_type: AVRO
          avro_schema: "@json:avro_schema.json"
          business_application: BAENTERPRISETECHINSIGHTS

  prepare_test_data:
    thresholds_raw:
      - function: head
        options:
          n: 500000
    dataset_certificates:
      - function: head
        options:
          n: 500000

  export_test_data:
    thresholds_raw:
    dataset_certificates: